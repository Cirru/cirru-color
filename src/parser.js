// Generated by CoffeeScript 1.6.3
(function() {
  var State, tokenize;

  State = (function() {
    function State() {
      this.list = ['line', 'func'];
    }

    State.prototype.get = function() {
      var last;
      last = this.list[this.list.length - 1];
      if (last == null) {
        new Error('Empty state list');
      }
      return last;
    };

    State.prototype.push = function(state) {
      return this.list.push(state);
    };

    State.prototype.pop = function(n) {
      n || (n = 1);
      while (n > 0) {
        this.list.pop();
        n -= 1;
      }
      return n;
    };

    return State;

  })();

  tokenize = function(line) {
    var count, isDollar, isFunc, isPara, isWhitespace, ret, rules, state;
    state = new State;
    ret = [];
    isWhitespace = function() {
      var whitespace;
      if (whitespace = line.match(/^\s+/)) {
        ret.push({
          text: whitespace[0],
          type: 'whitespace'
        });
        line = line.slice(whitespace.length);
        return true;
      } else {
        return false;
      }
    };
    isFunc = function() {
      var func;
      if (func = line.match(/^\w[^\"\(\)\$]/)) {
        ret.push({
          text: func[0],
          type: 'func'
        });
        line = line.slice(func);
        return true;
      } else {
        return false;
      }
    };
    isPara = function() {
      var para;
      if (para = line.match(/^\w[^\"\(\)\$]/)) {
        ret.push({
          text: para[0],
          type: 'para'
        });
        line = line.slice(para);
        return true;
      } else {
        return false;
      }
    };
    isDollar = function() {
      var dollar;
      if (dollar = line.slice(0, 2) === '$ ') {
        ret.push({
          text: dollar[0],
          type: 'dollar'
        });
        state.push('func');
        line = line.slice(2);
        return true;
      } else {
        return false;
      }
    };
    rules = {
      string: function() {},
      func: function() {
        if (isWhitespace()) {
          return;
        }
        if (isFunc()) {
          return;
        }
        if (isDollar()) {

        }
      },
      para: function() {},
      escape: function() {},
      line: function() {}
    };
    count = 0;
    while (line.length > 0) {
      rules[state.get()]();
      count += 1;
      if (count > 400) {
        console.warn('failed');
        break;
      }
    }
    return ret;
  };

  define(function(require, exports) {
    return function(code) {
      var lines;
      return lines = code.split('\n').map(tokenize);
    };
  });

}).call(this);

/*
//@ sourceMappingURL=parser.map
*/
